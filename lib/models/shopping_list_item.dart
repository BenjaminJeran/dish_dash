import 'package:flutter/material.dart'; // This import is not strictly necessary for the model itself, but often included in Flutter files.

class ShoppingListItem {
  // We'll keep id as nullable for items that haven't been inserted yet,
  // but ensure it's not null when performing operations that require an ID.
  final String? id;
  final String name;
  final int quantity;
  final bool isChecked;
  final DateTime?
  createdAt; // Optional, if you want to store it from the client

  ShoppingListItem({
    this.id, // 'id' can be null when creating a new item before it's saved to the DB
    required this.name,
    this.quantity = 1,
    this.isChecked = false,
    this.createdAt,
  });

  // Factory constructor to create a ShoppingListItem from a Supabase row (Map<String, dynamic>)
  factory ShoppingListItem.fromSupabase(Map<String, dynamic> data) {
    // When reading from Supabase, 'id' should always be present and be a String (UUID)
    // We can confidently cast it to String, as Supabase UUIDs are strings.
    // If 'id' somehow comes as null from Supabase for a record, it's an anomaly,
    // but the `as String?` handles it gracefully.
    return ShoppingListItem(
      id: data['id'] as String?, // Supabase UUIDs are returned as strings
      name: data['name'] as String,
      quantity: data['quantity'] as int,
      isChecked: data['is_checked'] as bool,
      createdAt:
          data['created_at'] != null
              ? DateTime.parse(
                data['created_at'].toString(),
              ) // Ensure it's a string before parsing
              : null,
    );
  }

  // Convert ShoppingListItem to a Map for Supabase insert/update
  Map<String, dynamic> toSupabase() {
    return {
      // 'id' is typically auto-generated by Supabase on insert, so don't send it unless updating
      'name': name,
      'quantity': quantity,
      'is_checked': isChecked,
      // 'created_at' is often handled by a `DEFAULT NOW()` in Supabase,
      // so you might not need to send it from the client.
      // If you do, uncomment the line below:
      // 'created_at': createdAt?.toIso8601String(),
    };
  }

  // Helper method to create a copy with updated values, useful for immutability
  ShoppingListItem copyWith({
    String? id,
    String? name,
    int? quantity,
    bool? isChecked,
    DateTime? createdAt,
  }) {
    return ShoppingListItem(
      id: id ?? this.id,
      name: name ?? this.name,
      quantity: quantity ?? this.quantity,
      isChecked: isChecked ?? this.isChecked,
      createdAt: createdAt ?? this.createdAt,
    );
  }
}
